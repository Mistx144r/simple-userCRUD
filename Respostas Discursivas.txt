1- Script SQL Para Criar A Table Users.

CREATE TABLE IF NOT EXISTS `users` (
    `id` INT AUTO_INCREMENT PRIMARY KEY,
    `nome` VARCHAR(100) NOT NULL,
    `email` VARCHAR(100) NOT NULL UNIQUE,
    `senha` VARCHAR(50) NOT NULL,
    `data_criacao` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
);

2- Escreva uma query para listar os 5 usuários mais recentes cadastrados.

SELECT id, nome, email, data_criacao
FROM users
ORDER BY data_criacao DESC
LIMIT 5;

3- Explique como protegeria rotas privadas.

No Backend:
Eu usaria um middleware que intercepta chamadas a rotas privadas para verificar o token JWT enviado pelo cliente. Se o token ainda estiver funcionando e não estiver expirado, a requisição prossegue para a lógica principal. Caso contrário, a requisição é bloqueada com um erro de acesso não autorizado (401).

No Frontend:
Eu crio um componente de Private Route usando o react-router. Antes de exibir uma página protegida, este componente checa se existe um token válido guardado no navegador. Se o token for válido, a página é renderizada; se não for, o usuário é redirecionado automaticamente para a tela de login.

4- Explique como você organizaria a estrutura de pastas do projeto para manter escalabilidade.

Para máxima escalabilidade, separei meu projeto em pastas raiz distintas, como /backend e /frontend. Cada uma dessas pastas é uma aplicação independente. Essa estrutura, conhecida como monorepo, permite que a API (backend) e o site (frontend) sejam desenvolvidos, testados e implantados de forma separada. Isso torna o projeto muito mais fácil de manter e crescer a longo prazo.

5- Explique como organizaria os componentes e estados da aplicação (useState, useEffect ou outro recurso do React).

Componentes:
Eu organizo os componentes em pastas por funcionalidade ou página. Componentes genéricos e reutilizáveis que podem ser usados em qualquer lugar, como botões e inputs customizados, ficam em uma pasta compartilhada separada. Isso mantém o código relacionado junto e o projeto fácil de navegar. (Bem Melhor Do Que Um Blocao De Codigo Com 1000-1500 Linhas)

Organização de Estados:
Eu organizo o estado do mais local para o mais global. useState é a primeira opção para dados que só precisam ficar em um componente. Se componentes distintos precisam compartilhar useStates eu iria enviar os valores por meio de Props.

6- Explique como faria para normalizar a tabela caso fosse necessário adicionar papéis de usuário (ex: admin, cliente).

Para adicionar papéis de usuário, eu primeiro alteraria a tabela users para incluir uma nova coluna, por exemplo, role, definindo 'user' como o valor padrão para todos na criação.
Em seguida, para atribuir os administradores, eu executaria um script SQL com o comando UPDATE. Este script usaria um statement simples WHERE email IN (Ex: roberto@gmail.com) para encontrar os usuários desejados a partir de uma lista de emails pré-definida e, então, alteraria o valor da coluna role deles para 'admin'.
Dessa forma, todos os novos usuários seriam 'user' por padrão, e apenas os especificados na lista se tornariam administradores.